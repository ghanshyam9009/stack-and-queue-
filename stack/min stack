
//  stack that supports getMin() in O(1) time and O(1) extra space
//  special syack

Input
["MinStack","push","push","push","getMin","pop","top","getMin"]
[[],[-2],[0],[-3],[],[],[],[]]

Output
[null,null,null,null,-3,null,0,-2]

Explanation
MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin(); // return -3
minStack.pop();
minStack.top();    // return 0
minStack.getMin(); // return -2



class MinStack {
public:
vector< pair<int,int>> ans;
    MinStack() {
        
    }
    
    void push(int val) {
        if(ans.empty()){
            ans.push_back({val,val});
        }
        else{
            ans.push_back({val,min(ans.back().second,val)});
        }
    }
    
    void pop() {
        ans.pop_back();
    }
    
    int top() {
        return ans.back().first;
    }
    
    int getMin() {
        return ans.back().second;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
