#include <bits/stdc++.h> 
/*
	This is signature of helper function 'knows'.
	You should not implement it, or speculate about its implementation.

	bool knows(int A, int B); 
	Function 'knows(A, B)' will returns "true" if the person having
	id 'A' know the person having id 'B' in the party, "false" otherwise.
*/

int findCelebrity(int n) {

     stack<int> s;
     for(int i=0;i<n;i++){
         s.push(i);
     }

     while(s.size()>1){

         int a=s.top();
         s.pop();

         int b=s.top();
         s.pop();

         if(knows(a,b)==true){
             s.push(b);
         }

         else{
             s.push(a);
         }
     }
     // potential canddite 
     int candidate=s.top();

     bool rowcheck=false;
     int kcount=0;

     for(int i=0;i<n;i++){
         if(knows(candidate,i)==false) kcount++;
     }

     if(kcount==n) rowcheck=true;

 

     bool colcheck=false;
     int nkcount=0;

     for(int i=0;i<n;i++){
         if(knows(i,candidate)==true) nkcount++;
     }

     if(nkcount==n-1) colcheck=true;

 

     if(rowcheck==true && colcheck==true){
         return candidate;
     }

     else{
         return -1;
     }

}




// Brute force T.c O(N^2) S.C O(1)

 

// int findCelebrity(int n) {

//     for(int i=0; i<n; i++){

//         bool celeb = true;

//         for(int j=0; j<n; j++){

//             if(j == i) continue;
//             // i j ko janta h or j i ko nahi janta
//             if(knows(i, j) || !knows(j, i)){
//                 celeb = false;
//                 break;
//             }
//         }

//         if(celeb){
//             return i;
//         }
//     }
//     return -1;
// }
